name: Deploy Terraform to AWS

on:
  workflow_dispatch: # Allow manual triggering of the workflow
    inputs:
      action:
        description: "Terraform action to perform (apply or destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write # Allow the workflow to request OIDC tokens.
  contents: read # Allow the workflow to read repository contents

jobs:
  terraform:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # Step 2: Set up AWS credentials for Terraform (you can store this in GitHub Secrets)
      - name: Configure AWS credentials from I AM Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Set up Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0" # Specify the Terraform version you want to use

      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 5: Validate the Terraform configuration (Optional)
      - name: Terraform Validate
        run: terraform validate

      # Step 6: Plan the deployment (Optional: Only for testing before applying)
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Step 7: Apply Terraform changes (requires approval if using auto-approve)
      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event.inputs.actions }}" == "apply" ]; then
            terraform apply -auto-approve tfplan
          elif [ "${{ github.event.inputs.actions }}" == "destroy" ]; then
            terraform destroy -auto-approve
          else
            echo "Invalid action : ${{ github.event.inputs.actions }}"
            exit 1
          fi
